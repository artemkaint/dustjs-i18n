/*! dustjs-i18n - v0.0.1 - 2013-10-28
* https://bitbucket.org/manolakis/dustjs-i18n
* Copyright (c) 2013 Manuel Martin; Licensed MIT */
!function(a){"use strict";var b=Object.prototype.toString,c=void 0!==typeof console?console:{log:function(){}},d={isArray:Array.isArray||function(a){return"[object Array]"===b.call(a)},isAvailable:function(a){return void 0!==f[a]},log:c.log},e={selected:void 0,languages:{},filters:{}},f=e.languages;void 0===typeof String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),a.i18n={resetContext:function(){e.selected=void 0,Object.keys(f).forEach(function(a){delete f[a]})},setLanguage:function(a){if(!d.isAvailable(a))throw new Error("language '"+a+"' not available!");e.selected=a},setLanguages:function(a){d.isArray(a)&&a.forEach(function(a){d.isAvailable(a)||(f[a]={}),void 0===e.selected&&(e.selected=a)})},add:function(a,b){if(d.isAvailable(a)){var c=f[a];Object.keys(b).forEach(function(a){c[a]=b[a]})}},addFilter:function(a,b){a in e.filters||(e.filters[a]=b)}},a.helpers.i18n=function(b,c,g,h){if(h&&void 0!==typeof h.$key){var i,j,k,l,m,n=e.selected,o=f[n],p=/\{(\s*[\w]+\s*)\}/g;for(l=a.helpers.tap(h.$key,b,c).split("|"),m=o[a.helpers.tap(l.shift(),b,c)];null!==(i=p.exec(m));)k=i[1].trim(),"$key"===k?(j="",d.log("$key can't be used as a parameter")):j=a.helpers.tap(h[i[1].trim()],b,c),m=m.replace(i[0],j);l.forEach(function(a){a in e.filters&&(m=e.filters[a](m))}),b.write(m)}else d.log("No key given in the i18n helper");return b}}("object"==typeof exports?require("dustjs-linkedin"):dust,"object"==typeof exports?require("showdown"):Showdown);